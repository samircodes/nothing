import numpy as np
import pandas as pd

# Step 1: Copy and preprocess DataFrame
TP_QTD = TP.copy()
TP_QTD['Quarter'] = TP_QTD['PERIOD'].str.extract(r'(\d{1})')[0].astype(int)
TP_QTD['Year'] = TP_QTD['PERIOD'].str.extract(r'(\d{4})')[0].astype(int)

# Step 2: Sort by grouping columns
group_cols = ['BUSINESS_UNIT', 'REGION', 'SCENARIO', 'LEGAL_ENTITY', 'Year', 'Quarter']
TP_QTD.sort_values(by=group_cols, inplace=True)
TP_QTD.reset_index(drop=True, inplace=True)

# Step 3: Define columns for NumPy processing
exclude_columns = {
    'ENTITY_ROLE', 'LE_LIST_FLAG', 'isPBIinProfit_NoSL', 'TCMreallocationFlag',
    'VALUE_DATE', 'PERIOD', 'BUSINESS_UNIT', 'REGION', 'SCENARIO', 'LEGAL_ENTITY',
    'Year', 'Quarter', 'BusinessCapitalRequired', 'AllocationPct', 'CapitalAllocationPct',
    'CompensationAllocationPct', 'INTEREST_EXPENSE_PERCENTAGE',
    'INTEREST_INCOME_PERCENTAGE', 'TRADING_REVENUE_PERCENTAGE',
    'NET_INCOME_PERCENTAGE', 'OTHER_REVENUE_PERCENTAGE',
    'LIQUIDITY_COST_PERCENTAGE', 'TotalPricingMeasure', 'TraderCompensation',
    'pricingMeasure'
}

numeric_cols = [col for col in TP_QTD.select_dtypes(include=[np.number]).columns if col not in exclude_columns]

# Step 4: Encode group columns into single group keys (using astype(str).agg)
group_keys = TP_QTD[['BUSINESS_UNIT', 'REGION', 'SCENARIO', 'LEGAL_ENTITY', 'Year']].astype(str).agg('-'.join, axis=1)
group_codes, group_indices = np.unique(group_keys, return_inverse=True)

# Step 5: Convert numeric data to NumPy array
data = TP_QTD[numeric_cols].to_numpy()

# Step 6: Create an empty array for the diff result
diff_result = np.full_like(data, np.nan)

# Step 7: Loop over unique groups and apply np.diff
for i in range(len(np.unique(group_indices))):
    idx = np.where(group_indices == i)[0]
    if len(idx) > 1:
        diff_result[idx[1:], :] = data[idx[1:], :] - data[idx[:-1], :]

# Step 8: Replace original columns with diff result
TP_QTD[numeric_cols] = diff_result

# Step 9: Drop temporary columns
TP_QTD.drop(columns=['Quarter', 'Year'], inplace=True)
