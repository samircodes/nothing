# Initialize the TCM_Shared column with zeros (or any default value)
TP['TCM_Shared'] = 0

# Loop through each row
for i in range(len(TP)):
    # Check if isPBTinProfit is True
    if TP['isPBTinProfit'][i] == True:
        # Check if LossesToRemainOnBookingEntity_FirstLoss is 0
        if TP['LossesToRemainOnBookingEntity_FirstLoss'][i] == 0:
            TP['TCM_Shared'][i] = TP['TCMAdjustmentPost'][i]
        # Check if LossesToRemainOnBookingEntity_FirstLoss != 0 and TCMAdjustmentPost > 0
        elif TP['LossesToRemainOnBookingEntity_FirstLoss'][i] != 0 and TP['TCMAdjustmentPost'][i] > 0:
            TP['TCM_Shared'][i] = (
                TP['Revenues'][i] +
                TP['StressLosses'][i] +
                TP['CPMRevenueAdjustmentPost'][i] +
                TP['Source_Balance_Adjustment_Rev'][i] +
                TP['RevenueOffset'][i] +
                TP['TCMAdjustmentPost'][i] +
                TP['OPERATING_EXP_ADJ_REV'][i] +
                TP['LossesToRemainOnBookingEntity_FirstLoss'][i]
            )
        # Fallback case if none of the above sub-conditions are met
        else:
            TP['TCM_Shared'][i] = TP['TCMAdjustmentPost'][i]
    # If isPBTinProfit is not True, skip to the next iteration
    else:
        continue



import pandas as pd

def compare_dataframes(df1, df2, column_name):
    """
    Compares two DataFrames based on a specific column and returns common and different rows.
    
    Parameters:
        df1 (pd.DataFrame): The first DataFrame.
        df2 (pd.DataFrame): The second DataFrame.
        column_name (str): The column name to compare.

    Returns:
        common_rows (pd.DataFrame): Rows that are common in both DataFrames based on the column.
        different_rows (pd.DataFrame): Rows that are different between the DataFrames based on the column.
    """
    if column_name not in df1.columns or column_name not in df2.columns:
        raise ValueError(f"Column '{column_name}' must exist in both DataFrames.")
    
    # Find common rows
    common_values = pd.merge(df1, df2, on=column_name)
    
    # Find different rows
    df1_diff = df1[~df1[column_name].isin(df2[column_name])]
    df2_diff = df2[~df2[column_name].isin(df1[column_name])]
    different_rows = pd.concat([df1_diff, df2_diff], ignore_index=True)

    return common_values, different_rows
