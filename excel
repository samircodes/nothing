from openpyxl import load_workbook
import pandas as pd

# Define file path and sheet name
file_path = "your_file.xlsx"  # Update with your actual file path
sheet_name = "YTD report"      # Sheet to replace

# Your DataFrame
df = pd.DataFrame({...})  # Replace with your actual DataFrame

# Load the existing workbook and select the sheet
wb = load_workbook(file_path)
if sheet_name in wb.sheetnames:
    ws = wb[sheet_name]
    ws.delete_rows(1, ws.max_row)  # Clear existing content

    # Write new DataFrame content
    for r_idx, row in enumerate(df.itertuples(index=False), start=1):
        for c_idx, value in enumerate(row, start=1):
            ws.cell(row=r_idx, column=c_idx, value=value)
    
    # Save the workbook
    wb.save(file_path)
    print(f"Sheet '{sheet_name}' has been updated successfully.")
else:
    print(f"Sheet '{sheet_name}' not found in the 




import pandas as pd
from openpyxl import load_workbook

# File paths
file_path = "your_file.xlsx"
new_file_path = "new_file.xlsx"  # Temporary file
sheet_name = "YTD report"

# Your DataFrame (replace with actual data)
df = pd.DataFrame({...})  

# Step 1: Write the new "YTD report" sheet quickly using XlsxWriter
df.to_excel(new_file_path, sheet_name=sheet_name, index=False, engine="xlsxwriter")

# Step 2: Load both workbooks
wb_old = load_workbook(file_path)
wb_new = load_workbook(new_file_path)

# Copy all sheets from the old file except "YTD report"
for sheet in wb_old.sheetnames:
    if sheet != sheet_name:  # Skip the "YTD report" sheet
        ws_old = wb_old[sheet]
        ws_new.create_sheet(sheet)
        ws_new_ws = wb_new[sheet]
        
        for row in ws_old.iter_rows(values_only=True):
            ws_new_ws.append(row)

# Step 3: Save the final file (overwrite the original)
wb_new.save(file_path)

print(f"Sheet '{sheet_name}' updated successfully while keeping other sheets.")
